package client.view;

import client.controller.ClientCtr;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import shared.dto.ObjectWrapper;
import shared.dto.PlayerHistory;
import shared.model.Match;

public class HistoryFrm extends javax.swing.JFrame {

    private ClientCtr clientCtr;

    public HistoryFrm(ClientCtr clientController) {
        clientCtr = clientController;
        initComponents();
        setLocationRelativeTo(null);
    }

    @Override
    public void setVisible(boolean visible) {
        if (visible) {
            System.out.println("In history form: ");
            clientCtr.sendData(new ObjectWrapper(ObjectWrapper.GET_HISTORY));
        }
        super.setVisible(visible);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        lblPlayer = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblNamePlayer = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblWin = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblLoss = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblAFK = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblRanking = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lblPoint = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("Quay về trang chủ");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblResult.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblResult.setText("LỊCH SỬ TRẬN ĐẤU");

        lblPlayer.setText("name player");

        jLabel1.setText("Username:");

        lblNamePlayer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNamePlayer.setText("namePlayer");

        jLabel3.setText("Số trận thắng:");

        lblWin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblWin.setText("0");

        jLabel4.setText("Số trận thua:");

        lblLoss.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLoss.setText("0");

        jLabel5.setText("Số trận AFK:");

        lblAFK.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAFK.setText("0");

        jLabel6.setText("Ranking:");

        lblRanking.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblRanking.setText("ranking");

        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Đối thủ", "Thời gian", "Kết quả", "Điểm thay đổi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblHistory);
        if (tblHistory.getColumnModel().getColumnCount() > 0) {
            tblHistory.getColumnModel().getColumn(0).setResizable(false);
            tblHistory.getColumnModel().getColumn(1).setResizable(false);
            tblHistory.getColumnModel().getColumn(2).setResizable(false);
            tblHistory.getColumnModel().getColumn(3).setResizable(false);
            tblHistory.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel7.setText("Điểm:");

        lblPoint.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPoint.setText("point");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lblPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNamePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblRanking, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblWin, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblLoss, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAFK, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNamePlayer)
                    .addComponent(jLabel6)
                    .addComponent(lblRanking)
                    .addComponent(jLabel7)
                    .addComponent(lblPoint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblWin)
                    .addComponent(jLabel4)
                    .addComponent(lblLoss)
                    .addComponent(jLabel5)
                    .addComponent(lblAFK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        clientCtr.getMainFrm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAFK;
    private javax.swing.JLabel lblLoss;
    private javax.swing.JLabel lblNamePlayer;
    private javax.swing.JLabel lblPlayer;
    private javax.swing.JLabel lblPoint;
    private javax.swing.JLabel lblRanking;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblWin;
    private javax.swing.JTable tblHistory;
    // End of variables declaration//GEN-END:variables

//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PlayFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PlayFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PlayFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PlayFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SetShipFrm().setVisible(true);
//            }
//        });
//    }
    public void receivedDataProcessing(ObjectWrapper data) {
        switch (data.getPerformative()) {
            case ObjectWrapper.SERVER_SEND_HISTORY:
                PlayerHistory playerHistory = (PlayerHistory) data.getData();

                // Thiết lập các nhãn với thông tin người chơi
                lblNamePlayer.setText(playerHistory.getUsername());
                lblRanking.setText(String.valueOf(playerHistory.getRanking()));
                lblPoint.setText(String.valueOf(playerHistory.getPoints()));
                lblWin.setText(String.valueOf(playerHistory.getTotalWins()));
                lblLoss.setText(String.valueOf(playerHistory.getTotalLosses()));
                lblAFK.setText(String.valueOf(playerHistory.getTotalAfk()));

                // Thiết lập dữ liệu bảng lịch sử trận đấu
                String[] columnNames = {"STT", "Đối thủ", "Thời gian", "Kết quả", "Điểm thay đổi"};
                DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

                // Tạo formatter theo định dạng dd/MM/yyyy HH:mm:ss
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");

                List<Match> listMatch = playerHistory.getListMatch();
                int index = 1;
                for (Match match : listMatch) {
                    Object[] rowData = {
                        index++,
                        match.getUser2Username(),
                        match.getTimestamp().format(formatter), // Định dạng timestamp
                        match.getResultUser1(),
                        match.getPointsChangeUser1()
                    };
                    tableModel.addRow(rowData);
                }

                tblHistory.setModel(tableModel);
                break;
        }
    }
}
